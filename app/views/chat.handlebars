{{#section 'style'}}
	<style>
	header{
		display: flex;
    	align-items: center;
	}

	#containerChat{
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    /* height: 100%; */
     width: 100%; 
    justify-content: center;
    align-items: center;
    display: flex;
    flex-direction: column;
	height: 100%;
    
	
	}
	
	#nome{
	margin: 0px;
	font-size:20px;
	}

	#writing{
		opacity: 0%;
		transition: 200ms;
		display: flex;
    height: 100%;
    align-items: end;

   
	}
	
	#contato{
	display: grid;
    flex-direction: row;
    align-items: center;
  
    width: min-content;
    justify-content: center;
    gap: 15px;
    margin: 0px;
    padding: 5px;
	grid-template-areas: "voltar nome writing";
    grid-template-columns: 30px max-content 30px;
    text-align: center;
	}

	#voltar{
		display: flex;
		align-items: center;
	}

	#result{
	    background-color: rgb(255 255 255 / 63%);
    overflow: auto;
    position: relative;
    display: flex;
    bottom: 0;
    flex-direction: column;
    padding: 5px;
    width: 90%;
    max-width: 700px;
    border-radius: 10px;
    box-shadow: 0px 0px 10px 10px #00000017;
    height: 100%;
	}
	
	#form{
	
    width: 80%;
    max-width: 490px;

    display: flex;
    flex-direction: row;

    justify-content: center;

    padding: 5px;
    background-color: rgb(225 225 225);
    border-radius: 0px 0px 10px 10px;
    flex-wrap: wrap;
    gap: 5px;
    margin: 0px;
	justify-content: center;
	box-shadow: 0px 0px 15px 2px #00000017;
	}
	
	.y, .m, .n{
	
	box-shadow: 0px 5px 10px 1px #00000014;
    font-size: 15px;
    border-radius: 10px;
    max-width: 80%;
    word-wrap: break-word;
    padding: 5px;
    margin: 5px;

	}
	
		.y{
		border-top-left-radius: 0px;
	align-self: start;
	  background-color:rgb(255 255 255 / 99%);
}
	
	.m{
	border-top-right-radius: 0px;
	background-color: rgb(181 249 255 / 60%);
	align-self: end;
	


	}
	
	.n{

	background-color: rgb(243 243 243 / 99%);
	align-self: center;
	}
	

	</style>

{{/section}}

<div id="containerChat">
	
<div id="contato">
	<a id = "voltar" href="/"><img src="left-arrow.png" height= "20px"></img></a>
	<h1 id="nome">...</h1>
	<span id = "writing">digitando...</span>

</div>


<div id="result">


</div>

<form id="form">

</form>
<div id="end">

</div>



</div>
{{#section 'script'}}
<script>


	document.getElementById('logo').style.display = 'none'
	window.addEventListener('beforeunload',  () => {fetch('/api/bye', {method: 'post'}).then(() => {
		
	})
	
	
	});

	
var id ={{id}}
//Procura algum parceiro disponivel


	


					procuraParceiro() 


  function procuraParceiro() {
  
	result.innerHTML = '<p class="n">Procurando participante...</p>'
	const headers = { 'Content-Type': 'application/json'}
	fetch('/api/loading/{{modo}}', {method: 'post', headers}).then(
		resp => {
					return resp.json() 
		}).then(json => {
					console.log('sexo> '+json.sex)
					if(json.m == true){
			
					document.getElementById('result').innerHTML = ''
					document.getElementById('result').innerHTML += '<p class="n">Você já está falando com alguém! Diga oi!</p>'
					document.getElementById('form').innerHTML =  '<div style="display: flex;flex-wrap: wrap; justify-content: center;"><input id="texto" name="texto" type="text" onkeyup="writing()"><input type="submit" value="enviar"></div><button onclick="end()">Encerrar conversa</button>'
					document.getElementById('nome').innerHTML = json.nome
					
					if(json.sex == 1){
						document.getElementById('nome').innerHTML += '<img src="simbolo-feminino.png" alt="não binário">'
					}
					if(json.sex == 0){
						document.getElementById('nome').innerHTML += '<img src="sexo-feminino.png" alt="não binário">'
					}
					if(json.sex == 2){
					document.getElementById('nome').innerHTML += '<img src="nao-binario.png" alt="não binário">'
					}

				
					id = json.id;
					procuraMensagens()
					
					
					
					}else{
				
					if(json.m == 'erro') {
					result.innerHTML = '<p class="n">O chat foi finalizado.</p><button onclick="novoChat()">Novo chat</button>'
			
					
					}else{
					
					procuraParceiro()
					}
					}
						}).catch(err => { 
						window.alert='Erro! Tente novamente!'
						})	}


 

//procura mensagens
	function procuraMensagens() {
	const headers = { 'Content-Type': 'application/json'}
	
	fetch('/api/resp/{{modo}}', {method: 'post', headers}).then(
		resp => {
					return resp.json()
				
		}).then(json => {
		
		if(json.meOffline == true){
		result.innerHTML = '<p class="n">O chat foi finalizado.</p><button onclick="novoChat()">Novo chat</button>'
		document.getElementById('nome').innerHTML= ''
		document.getElementById('writing').style.opacity = 0%
			end()
			
		}else{
		
		
		if(json.offline == true){
			result.innerHTML = '<p class="n">O chat foi finalizado.</p><button onclick="novoChat()">Novo chat</button>'
			document.getElementById('nome').innerHTML= ''
			document.getElementById('writing').style.opacity = 0%
			end()
		}else{
	
			if(json.mensagem != undefined && json.mensagem != ''){
					result.innerHTML += '<p class="y">'+json.mensagem+'</p>'
					result.scrollTop = result.scrollHeight
				}
			
			if(json.writing == true){
				document.getElementById('writing').style.opacity = '100%'
			}else{
				document.getElementById('writing').style.opacity = '0%'
			}
						
				procuraMensagens()
				
			}
			}
			})
				
					
					
		.catch(err => { 
						window.alert=err
					
	})
	
	
	}



//enviar mensagem
var n = 0
document.getElementById('form').addEventListener('submit', (evt) => {
		evt.preventDefault()
		const form = evt.target
		const body = JSON.stringify({
		texto: form.elements.texto.value,
		})
		const headers = { 'Content-Type': 'application/json'}
		const result = document.getElementById('result')
		const myResult = document.getElementById('result')
		
		
		fetch('/api/send', {method: 'post', body, headers}).then(resp => {
		
		return resp.json()
		}).then(json => {
		if(document.getElementById('texto').value != ''){
		myResult.innerHTML += '<p class="m">'+document.getElementById('texto').value+'</p>'
						document.getElementById('texto').value = ''
							result.scrollTop = result.scrollHeight
							window.scroll(0, 0)
						n++ 
						}
						}) 
	
	} 
	)


	

	function end(a){

	
			fetch('/api/bye', {method: 'post'})
		
	}



	function novoChat() {
		document.location.reload(true);
	}

	function writing() {
		fetch('/api/writing', {method: 'post'})
	}


	




	
	</script>
	
	{{/section}}